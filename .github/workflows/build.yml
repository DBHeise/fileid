name: Build & Push

on:
  push:
    branches: [master]

jobs:
  build-linux:
    name: Linux Build
    runs-on: ubuntu-latest    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Build
      run: |
        mkdir -p bin/linux
        make clean
        make    
    - name: Run unit Tests
      run: |
        ./bin/linux/unit_tests
    - name: Archive
      uses: actions/upload-artifact@v1
      with:
        name: Linux-binaries
        path: bin/linux
  build-windows:
    name: Windows Build
    runs-on: windows-latest    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true    
    - name: Build
      shell: pwsh      
      run: |
        .\build.ps1    
    - name: Run Unit Tests
      run: |
        .\Bin\x86\Release\unit_tests.exe
        .\Bin\x64\Release\unit_tests.exe
    - name: Archive x86
      uses: actions/upload-artifact@v4
      with:
        name: Windows-x86-binaries
        path: Bin/x86/Release    
    - name: Archive x64
      uses: actions/upload-artifact@v4
      with:
        name: Windows-x64-binaries
        path: Bin/x64/Release
  version:
    runs-on: ubuntu-latest
    needs: 
      - build-linux
      - build-windows      
    permissions:
      contents: write
    outputs:
      newtag: ${{ steps.calculate-version.outputs.version-string }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: calculate version
        id: calculate-version
        uses: bitshifted/git-auto-semver@v1
        with:
          main_branch: master
          create_tag: true
          tag_prefix: 'v'
      - name: Use version
        run: 'echo "Calculated version: ${{ steps.calculate-version.outputs.version-string }}"'
  
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Prepare Artifacts for Release
        run: |
          cd artifacts
          find *binaries -type d | xargs -I subdir -- 7z a subdir.zip subdir\*
      - name: Create a Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ needs.version.outputs.newtag }}
          tag_name: ${{ needs.version.outputs.newtag }}
          token: ${{ secrets.GITHUB_TOKEN }}
          make_latest: true
          files:
            artifacts/*.zip
  
